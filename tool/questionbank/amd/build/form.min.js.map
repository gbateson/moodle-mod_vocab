{"version":3,"file":"form.min.js","sources":["../src/form.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * mod/vocab/tool/questionbank/amd/src/form.js\n *\n * @module     block_ungraded_activities\n * @copyright  2023 Gordon Bateson (gordon.bateson@gmail.com)\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      Moodle 3.11\n */\n\ndefine([], function(){\n\n    let JS = {};\n    window.JS = JS;\n\n    JS.add_event_listener = function(obj, evt, fn, useCapture) {\n        if (obj.addEventListener) {\n            obj.addEventListener(evt, fn, (useCapture || false));\n        } else if (obj.attachEvent) {\n            obj.attachEvent('on' + evt, fn);\n        }\n    };\n\n    /*\n     * initialize this AMD module\n     */\n    JS.init = function() {\n        const s = 'input[type=\"checkbox\"][name=\"selectedwords[selectall]\"]';\n        const selectall = document.querySelector(s);\n        if (selectall) {\n\n            JS.add_event_listener(selectall, 'click', JS.onclick_selectall);\n            selectall.dispatchEvent(new Event('click'));\n\n            const label = selectall.closest('label');\n            if (label) {\n                if (label.classList.contains('d-none')) {\n                    label.classList.remove('d-none');\n                }\n                label.classList.add('btn', 'btn-light', 'border-dark');\n                label.classList.add('align-self-start', 'px-2', 'py-0');\n\n                const p = label.closest('.fcontainer').querySelector('.col-form-label p');\n                if (p) {\n                    p.replaceWith(label);\n                }\n            }\n        }\n    };\n\n    JS.onclick_selectall = function(){\n        const checked = this.checked;\n\n        // Check/uncheck all other checkboxes in this fieldset\n        // that have the same name prefix, e.g. \"selectedwords\".\n        const nameprefix = this.name.substr(0, this.name.indexOf('['));\n        const s = 'input[type=\"checkbox\"][name^=\"' + nameprefix + '\"]';\n        this.closest('fieldset').querySelectorAll(s).forEach(function(cb){\n            cb.checked = checked;\n        });\n\n        // Set new text for this checkbox.\n        let txt = '';\n        if (checked) {\n            txt = this.dataset.deselectall || '';\n        } else {\n            txt = this.dataset.selectall || '';\n        }\n        if (txt) {\n            // Locate the label for this checkbox.\n            const label = this.closest('label');\n            if (label) {\n                // Remove existing text nodes in this label.\n                for (let i = (label.childNodes.length - 1); i >= 0 ; i--) {\n                    const n = label.childNodes[i];\n                    if (n.nodeType == 3) {\n                        label.removeChild(n);\n                    }\n                }\n                // Add new text in a node at the end of the label.\n                label.appendChild(document.createTextNode(txt));\n            }\n        }\n        return true;\n    };\n\n    return JS;\n});"],"names":["define","JS","window","add_event_listener","obj","evt","fn","useCapture","addEventListener","attachEvent","init","selectall","document","querySelector","onclick_selectall","dispatchEvent","Event","label","closest","classList","contains","remove","add","p","replaceWith","checked","this","s","name","substr","indexOf","querySelectorAll","forEach","cb","txt","dataset","deselectall","i","childNodes","length","n","nodeType","removeChild","appendChild","createTextNode"],"mappings":";;;;;;;;AAwBAA,qCAAO,IAAI,WAEP,IAAIC,GAAK,GA0ET,OAzEAC,OAAOD,GAAKA,GAEZA,GAAGE,mBAAqB,SAASC,IAAKC,IAAKC,GAAIC,YACvCH,IAAII,iBACJJ,IAAII,iBAAiBH,IAAKC,GAAKC,aAAc,GACtCH,IAAIK,aACXL,IAAIK,YAAY,KAAOJ,IAAKC,KAOpCL,GAAGS,KAAO,WACN,MACMC,UAAYC,SAASC,cADjB,2DAEV,GAAIF,UAAW,CAEXV,GAAGE,mBAAmBQ,UAAW,QAASV,GAAGa,mBAC7CH,UAAUI,cAAc,IAAIC,MAAM,UAElC,MAAMC,MAAQN,UAAUO,QAAQ,SAChC,GAAID,MAAO,CACHA,MAAME,UAAUC,SAAS,WACzBH,MAAME,UAAUE,OAAO,UAE3BJ,MAAME,UAAUG,IAAI,MAAO,YAAa,eACxCL,MAAME,UAAUG,IAAI,mBAAoB,OAAQ,QAEhD,MAAMC,EAAIN,MAAMC,QAAQ,eAAeL,cAAc,qBACjDU,GACAA,EAAEC,YAAYP,UAM9BhB,GAAGa,kBAAoB,WACnB,MAAMW,QAAUC,KAAKD,QAKfE,EAAI,iCADSD,KAAKE,KAAKC,OAAO,EAAGH,KAAKE,KAAKE,QAAQ,MACC,KAC1DJ,KAAKR,QAAQ,YAAYa,iBAAiBJ,GAAGK,SAAQ,SAASC,IAC1DA,GAAGR,QAAUA,WAIjB,IAAIS,IAAM,GAMV,GAJIA,IADAT,QACMC,KAAKS,QAAQC,aAAe,GAE5BV,KAAKS,QAAQxB,WAAa,GAEhCuB,IAAK,CAEL,MAAMjB,MAAQS,KAAKR,QAAQ,SAC3B,GAAID,MAAO,CAEP,IAAK,IAAIoB,EAAKpB,MAAMqB,WAAWC,OAAS,EAAIF,GAAK,EAAIA,IAAK,CACtD,MAAMG,EAAIvB,MAAMqB,WAAWD,GACT,GAAdG,EAAEC,UACFxB,MAAMyB,YAAYF,GAI1BvB,MAAM0B,YAAY/B,SAASgC,eAAeV,OAGlD,OAAO,GAGJjC,EACX"}