{"version":3,"file":"form.min.js","sources":["../src/form.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * mod/vocab/tool/questionbank/amd/src/form.js\n *\n * @module     vocabtool_questionbank\n * @copyright  2023 Gordon Bateson (gordon.bateson@gmail.com)\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      Moodle 3.11\n */\n\ndefine([], function(){\n\n    let JS = {};\n\n    /*\n     * Add/Attach event listener (cross-browser version).\n     */\n    JS.add_event_listener = function(obj, evt, fn, useCapture) {\n        if (obj.addEventListener) {\n            obj.addEventListener(evt, fn, (useCapture || false));\n        } else if (obj.attachEvent) {\n            obj.attachEvent('on' + evt, fn);\n        }\n    };\n\n    /*\n     * Initialize this AMD module;\n     */\n    JS.init = function() {\n        this.init_selectall_logs();\n        this.init_textareas_logs();\n        this.init_selectall_words();\n        this.init_checkboxes_words();\n    };\n\n    JS.init_selectall_logs = function(){\n        const s = 'input[type=\"checkbox\"][name=\"logids[selectall]\"]';\n        const selectall = document.querySelector(s);\n        if (selectall) {\n            JS.add_event_listener(selectall, 'click', JS.onclick_selectall);\n            if (selectall.classList.contains(\"d-none\")) {\n                selectall.classList.remove(\"d-none\");\n            }\n        }\n    };\n\n    JS.init_textareas_logs = function(){\n        const s = '#id_log_error, #id_log_prompt, #id_log_results';\n        document.querySelectorAll(s).forEach(function(textarea){\n            // Add event listener that adjusts height to accommodate content.\n            JS.add_event_listener(textarea, 'input', function(){\n                this.style.height = 'auto'; // '1px' also works\n                this.style.height = (this.scrollHeight + 6) + 'px';\n            });\n            textarea.dispatchEvent(new Event('input'));\n        });\n    };\n\n    JS.init_selectall_words = function(){\n        const s = 'input[type=\"checkbox\"][name=\"selectedwords[selectall]\"]';\n        const selectall = document.querySelector(s);\n        if (selectall) {\n\n            JS.add_event_listener(selectall, 'click', JS.onclick_selectall);\n\n            const label = selectall.closest('label');\n            if (label) {\n                if (label.classList.contains('d-none')) {\n                    label.classList.remove('d-none');\n                }\n                label.classList.add('btn', 'btn-light', 'border-dark');\n                label.classList.add('align-self-start', 'px-2', 'py-0');\n\n                const p = label.closest('.fcontainer').querySelector('.col-form-label p');\n                if (p) {\n                    p.replaceWith(label);\n                }\n            }\n        }\n    };\n\n    JS.onclick_selectall = function(){\n        const checked = this.checked;\n\n        // Check/uncheck all other checkboxes in this fieldset\n        // that have the same name prefix, e.g. \"selectedwords\".\n        const nameprefix = this.name.substr(0, this.name.indexOf('['));\n        const s = 'input[type=\"checkbox\"][name^=\"' + nameprefix + '\"]';\n        this.closest('fieldset').querySelectorAll(s).forEach(function(cb){\n            cb.checked = checked;\n        });\n\n        // Set new text for this checkbox.\n        let txt = '';\n        if (checked) {\n            txt = this.dataset.deselectall || '';\n        } else {\n            txt = this.dataset.selectall || '';\n        }\n        if (txt) {\n            // Locate the label for this checkbox.\n            const label = this.closest('label');\n            if (label) {\n                // Remove existing text nodes in this label.\n                for (let i = (label.childNodes.length - 1); i >= 0 ; i--) {\n                    const n = label.childNodes[i];\n                    if (n.nodeType == 3) {\n                        label.removeChild(n);\n                    }\n                }\n                // Add new text in a node at the end of the label.\n                label.appendChild(document.createTextNode(txt));\n            }\n        }\n        return true;\n    };\n\n    JS.init_checkboxes_words = function(){\n        const s = 'input[type=\"checkbox\"][name^=\"selectedwords\"]';\n        document.querySelectorAll(s).forEach(function(cb){\n            JS.add_event_listener(cb, 'click', JS.onclick_checkbox);\n        });\n    };\n\n    JS.onclick_checkbox = function(evt){\n\n        const felement = this.closest('.felement');\n        if (felement === null) {\n            return true;\n        }\n\n        const checkboxes = 'input[type=\"checkbox\"]';\n        const dataclicked = checkboxes + '[data-clicked=\"1\"]';\n\n        const cb_start = felement.querySelector(dataclicked);\n        const cb_stop = evt.currentTarget;\n\n        let unclickall = false;\n        let clickme = true;\n\n        if (evt.shiftKey) {\n            if (cb_start) {\n                let found = false;\n                let startstop = false;\n                felement.querySelectorAll(checkboxes).forEach(function(cb){\n                    startstop = (cb == cb_start || cb == cb_stop);\n                    if (found || startstop) {\n                        cb.checked = evt.currentTarget.checked;\n                        if (startstop) {\n                            found = (found ? false : true);\n                        }\n                    }\n\n                });\n                unclickall = true;\n            } else {\n                clickme = true;\n            }\n        } else {\n            unclickall = true;\n            clickme = true;\n        }\n\n        if (unclickall) {\n            felement.querySelectorAll(dataclicked).forEach(function(cb){\n                cb.removeAttribute('data-clicked');\n            });\n        }\n\n        if (clickme) {\n            evt.currentTarget.setAttribute('data-clicked', '1');\n        }\n    };\n\n    return JS;\n});"],"names":["define","JS","obj","evt","fn","useCapture","addEventListener","attachEvent","init_selectall_logs","init_textareas_logs","init_selectall_words","init_checkboxes_words","selectall","document","querySelector","add_event_listener","onclick_selectall","classList","contains","remove","querySelectorAll","forEach","textarea","style","height","this","scrollHeight","dispatchEvent","Event","label","closest","add","p","replaceWith","checked","s","name","substr","indexOf","cb","txt","dataset","deselectall","i","childNodes","length","n","nodeType","removeChild","appendChild","createTextNode","onclick_checkbox","felement","dataclicked","checkboxes","cb_start","cb_stop","currentTarget","unclickall","clickme","shiftKey","found","startstop","removeAttribute","setAttribute"],"mappings":";;;;;;;;AAwBAA,qCAAO,IAAI,eAEHC,GAAK,CAKTA,mBAAwB,SAASC,IAAKC,IAAKC,GAAIC,YACvCH,IAAII,iBACJJ,IAAII,iBAAiBH,IAAKC,GAAKC,aAAc,GACtCH,IAAIK,aACXL,IAAIK,YAAY,KAAOJ,IAAKC,KAOpCH,KAAU,gBACDO,2BACAC,2BACAC,4BACAC,yBAGTV,oBAAyB,iBAEfW,UAAYC,SAASC,cADjB,oDAENF,YACAX,GAAGc,mBAAmBH,UAAW,QAASX,GAAGe,mBACzCJ,UAAUK,UAAUC,SAAS,WAC7BN,UAAUK,UAAUE,OAAO,YAKvClB,oBAAyB,WAErBY,SAASO,iBADC,kDACmBC,SAAQ,SAASC,UAE1CrB,GAAGc,mBAAmBO,SAAU,SAAS,gBAChCC,MAAMC,OAAS,YACfD,MAAMC,OAAUC,KAAKC,aAAe,EAAK,QAElDJ,SAASK,cAAc,IAAIC,MAAM,cAIzC3B,qBAA0B,iBAEhBW,UAAYC,SAASC,cADjB,8DAENF,UAAW,CAEXX,GAAGc,mBAAmBH,UAAW,QAASX,GAAGe,yBAEvCa,MAAQjB,UAAUkB,QAAQ,YAC5BD,MAAO,CACHA,MAAMZ,UAAUC,SAAS,WACzBW,MAAMZ,UAAUE,OAAO,UAE3BU,MAAMZ,UAAUc,IAAI,MAAO,YAAa,eACxCF,MAAMZ,UAAUc,IAAI,mBAAoB,OAAQ,cAE1CC,EAAIH,MAAMC,QAAQ,eAAehB,cAAc,qBACjDkB,GACAA,EAAEC,YAAYJ,UAM9B5B,kBAAuB,iBACbiC,QAAUT,KAAKS,QAKfC,EAAI,iCADSV,KAAKW,KAAKC,OAAO,EAAGZ,KAAKW,KAAKE,QAAQ,MACC,UACrDR,QAAQ,YAAYV,iBAAiBe,GAAGd,SAAQ,SAASkB,IAC1DA,GAAGL,QAAUA,eAIbM,IAAM,MAENA,IADAN,QACMT,KAAKgB,QAAQC,aAAe,GAE5BjB,KAAKgB,QAAQ7B,WAAa,GAEhC4B,IAAK,OAECX,MAAQJ,KAAKK,QAAQ,YACvBD,MAAO,KAEF,IAAIc,EAAKd,MAAMe,WAAWC,OAAS,EAAIF,GAAK,EAAIA,IAAK,OAChDG,EAAIjB,MAAMe,WAAWD,GACT,GAAdG,EAAEC,UACFlB,MAAMmB,YAAYF,GAI1BjB,MAAMoB,YAAYpC,SAASqC,eAAeV,cAG3C,GAGXvC,sBAA2B,WAEvBY,SAASO,iBADC,iDACmBC,SAAQ,SAASkB,IAC1CtC,GAAGc,mBAAmBwB,GAAI,QAAStC,GAAGkD,sBAI9ClD,iBAAsB,SAASE,WAErBiD,SAAW3B,KAAKK,QAAQ,gBACb,OAAbsB,gBACO,QAILC,YAAcC,2CAEdC,SAAWH,SAAStC,cAAcuC,aAClCG,QAAUrD,IAAIsD,kBAEhBC,YAAa,EACbC,SAAU,KAEVxD,IAAIyD,YACAL,SAAU,KACNM,OAAQ,EACRC,WAAY,EAChBV,SAAShC,iBAbE,0BAa2BC,SAAQ,SAASkB,IACnDuB,UAAavB,IAAMgB,UAAYhB,IAAMiB,SACjCK,OAASC,aACTvB,GAAGL,QAAU/B,IAAIsD,cAAcvB,QAC3B4B,YACAD,OAASA,WAKrBH,YAAa,OAEbC,SAAU,OAGdD,YAAa,EACbC,SAAU,EAGVD,YACAN,SAAShC,iBAAiBiC,aAAahC,SAAQ,SAASkB,IACpDA,GAAGwB,gBAAgB,mBAIvBJ,SACAxD,IAAIsD,cAAcO,aAAa,eAAgB,cAIhD/D"}