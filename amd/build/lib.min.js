/**
 * mod/vocab/ai/prompts/amd/src/form.LIB
 *
 * A module that provides utility functions for handling DOM elements, such as
 * dynamically adjusting input text widths and textarea heights.
 *
 * @module     vocabai_prompts
 * @copyright  2023 Gordon Bateson (gordon.bateson@gmail.com)
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 * @since      Moodle 3.11
 */
define("mod_vocab/lib",[],(function(){let LIB={add_event_listener:function(obj,evt,fn,useCapture){obj.addEventListener?obj.addEventListener(evt,fn,useCapture||!1):obj.attachEvent&&obj.attachEvent("on"+evt,fn)},is_collapsed:function(elm){const fieldset=elm.closest("fieldset.collapsible");return fieldset&&fieldset.matches(".collapsed")},get_dimension:function(elm,dimension){return"width"==dimension?(elm.style.width="auto",elm.scrollWidth):"height"==dimension?(elm.style.height="auto",elm.scrollHeight):0},guess_dimension:function(elm,dimension){const tmp=document.createElement(elm.tagName);elm.hasAttribute("type")&&(tmp.type=elm.type),elm.hasAttribute("value")&&(tmp.value=elm.value),(elm.hasAttribute("class")||elm.hasAttribute("className"))&&(tmp.className=elm.className),tmp.style.visibility="hidden",document.body.appendChild(tmp);let value=LIB.get_dimension(tmp,dimension);const cs=window.getComputedStyle(elm);return"content-box"==cs.boxSizing&&("width"==dimension?(value+=parseInt(cs.borderLeft)+parseInt(cs.borderRight),value+=parseInt(cs.paddingLeft)+parseInt(cs.paddingRight)):(value+=parseInt(cs.borderTop)+parseInt(cs.borderBottom),value+=parseInt(cs.paddingTop)+parseInt(cs.paddingBottom))),tmp.remove(),value},set_dimension:function(elm,dimension,value){elm.value&&(void 0===value&&(value=LIB.is_collapsed(elm)?LIB.guess_dimension(elm,dimension):LIB.get_dimension(elm,dimension)),value&&(elm.style[dimension]=value+6+"px"))},setup_dimensions:function(ids){"string"==typeof ids&&(ids=ids.split(",").map((id=>id.trim()))),ids.forEach((function(id){const elm=document.getElementById(id);if(elm){let dimension="";"INPUT"==elm.tagName?"text"==elm.type&&(dimension="width"):"TEXTAREA"==elm.tagName&&(dimension="height"),dimension&&(LIB.add_event_listener(elm,"input",(function(evt){LIB.set_dimension(evt.target,dimension)})),LIB.set_dimension(elm,dimension))}}))}};return LIB}));

//# sourceMappingURL=lib.min.js.map