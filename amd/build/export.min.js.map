{"version":3,"file":"export.min.js","sources":["../src/export.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * mod/vocab/tool/wordlist/amd/src/form.EXPORT\n *\n * @module     vocabtool_wordlist\n * @copyright  2023 Gordon Bateson (gordon.bateson@gmail.com)\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      Moodle 3.11\n */\n\ndefine(['mod_vocab/lib', 'core/str'], function(LIB, STR) {\n\n    var EXPORT = {};\n\n    /*\n     * initialize the str object to hold language strings.\n     */\n    EXPORT.str = {};\n\n    /*\n     * initialize this AMD module\n     */\n    EXPORT.init = function() {\n        LIB.setup_dimensions(\n            'id_exportfileelements_exportfile'\n        );\n        STR.get_strings([\n            {\"key\": \"all\", \"component\": \"moodle\"},\n            {\"key\": \"none\", \"component\": \"moodle\"},\n        ]).done(function(s) {\n            var i = 0;\n            EXPORT.str.all = s[i++];\n            EXPORT.str.none = s[i++];\n            EXPORT.setup_allnone();\n        });\n    };\n\n    /*\n     * Setup the All/None links\n     */\n    EXPORT.setup_allnone = function() {\n        const fieldset = document.getElementById('id_export');\n        if (fieldset === null) {\n            return; // Shouldn't happen !!\n        }\n        const names = ['contentplugins', 'assistantplugins'];\n        for (const i in names) {\n            const label = fieldset.querySelector(\n                '#fgroup_id_' + names[i] + '_label'\n            );\n            if (label === null) {\n                continue; // Shouldn't happen !!\n            }\n            let div = Object.assign(\n                document.createElement('div'),\n                {class: 'toggleallnone'}\n            );\n            div.append(\n                Object.assign(\n                    document.createElement('small'), {\n                        'textContent': EXPORT.str.all,\n                        'className': 'selectall text-info',\n                        'onclick': EXPORT.onclick_selectall\n                    }\n                ),\n                ' / ',\n                Object.assign(\n                    document.createElement('small'), {\n                        'textContent': EXPORT.str.none,\n                        'className': 'selectnone text-info',\n                        'onclick': EXPORT.onclick_selectnone\n                    }\n                )\n            );\n            label.appendChild(div);\n\n            const selectall = div.querySelector('.selectall');\n            if (selectall) {\n                selectall.dispatchEvent(new Event('click'));\n            }\n        }\n    };\n\n    /*\n     * onclick event handler for selectall\n     */\n    EXPORT.onclick_selectall = function(evt) {\n        return EXPORT.onclick_selectallnone(evt.target, true);\n    };\n\n    /*\n     * onclick event handler for selectnone\n     */\n    EXPORT.onclick_selectnone = function(evt) {\n        return EXPORT.onclick_selectallnone(evt.target, false);\n    };\n\n    /*\n     * onclick event handler for selectall/none\n     */\n    EXPORT.onclick_selectallnone = function(elm, checked) {\n        const fgroup = elm.closest('.fitem[id^=\"fgroup_id_\"]');\n        if (fgroup) {\n            const s = 'input[type=\"checkbox\"]';\n            fgroup.querySelectorAll(s).forEach(function(cb){\n                cb.checked = checked;\n            });\n        }\n        return true;\n    };\n\n    return EXPORT;\n});"],"names":["define","LIB","STR","EXPORT","setup_dimensions","get_strings","done","s","i","str","all","none","setup_allnone","fieldset","document","getElementById","names","label","querySelector","div","Object","assign","createElement","class","append","onclick_selectall","onclick_selectnone","appendChild","selectall","dispatchEvent","Event","evt","onclick_selectallnone","target","elm","checked","fgroup","closest","querySelectorAll","forEach","cb"],"mappings":";;;;;;;;AAwBAA,0BAAO,CAAC,gBAAiB,aAAa,SAASC,IAAKC,SAE5CC,OAAS,CAKbA,IAAa,GAKbA,KAAc,WACVF,IAAIG,iBACA,oCAEJF,IAAIG,YAAY,CACZ,KAAQ,gBAAoB,UAC5B,KAAQ,iBAAqB,YAC9BC,MAAK,SAASC,OACTC,EAAI,EACRL,OAAOM,IAAIC,IAAMH,EAAEC,KACnBL,OAAOM,IAAIE,KAAOJ,EAAEC,KACpBL,OAAOS,oBAOfT,cAAuB,iBACbU,SAAWC,SAASC,eAAe,gBACxB,OAAbF,sBAGEG,MAAQ,CAAC,iBAAkB,wBAC5B,MAAMR,KAAKQ,MAAO,OACbC,MAAQJ,SAASK,cACnB,cAAgBF,MAAMR,GAAK,aAEjB,OAAVS,mBAGAE,IAAMC,OAAOC,OACbP,SAASQ,cAAc,OACvB,CAACC,MAAO,kBAEZJ,IAAIK,OACAJ,OAAOC,OACHP,SAASQ,cAAc,SAAU,aACdnB,OAAOM,IAAIC,cACb,8BACFP,OAAOsB,oBAG1B,MACAL,OAAOC,OACHP,SAASQ,cAAc,SAAU,aACdnB,OAAOM,IAAIE,eACb,+BACFR,OAAOuB,sBAI9BT,MAAMU,YAAYR,WAEZS,UAAYT,IAAID,cAAc,cAChCU,WACAA,UAAUC,cAAc,IAAIC,MAAM,YAQ9C3B,kBAA2B,SAAS4B,YACzB5B,OAAO6B,sBAAsBD,IAAIE,QAAQ,IAMpD9B,mBAA4B,SAAS4B,YAC1B5B,OAAO6B,sBAAsBD,IAAIE,QAAQ,IAMpD9B,sBAA+B,SAAS+B,IAAKC,eACnCC,OAASF,IAAIG,QAAQ,+BACvBD,OAAQ,OACF7B,EAAI,yBACV6B,OAAOE,iBAAiB/B,GAAGgC,SAAQ,SAASC,IACxCA,GAAGL,QAAUA,kBAGd,WAGJhC"}